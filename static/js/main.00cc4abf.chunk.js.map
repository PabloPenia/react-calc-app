{"version":3,"sources":["components/Button/index.jsx","App.jsx","components/Functions.jsx","components/MathOps.jsx","components/Numbers.jsx","components/Result.jsx","index.jsx"],"names":["Button","type","text","clickHandler","className","onClick","App","useState","stack","setStack","items","words","value","length","onClickNum","num","onContentClear","onDelete","newStack","substring","onClickOp","op","onClickEqual","eval","toString","Functions","MathOps","renderButtons","map","number","Numbers","Result","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"qHAAA,sBAgBeA,IAZA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,aAAf,OACb,wBAAQC,UAAWH,EAAMI,QAAS,kBAAMF,EAAaD,IAArD,SACE,+BAAOA,Q,uuCCELI,IAAM,SAANA,MAEJ,cAA0BC,oDAAS,IAAnC,mMAAOC,MAAP,cAAcC,SAAd,cACMC,MAAQC,oDAAMH,MAAO,gBACrBI,MAAQF,MAAMG,OAAS,EAAIH,MAAMA,MAAMG,OAAO,GAAK,IAEzD,OACA,oEAAMT,UAAU,mBAAhB,UACE,2DAAC,kDAAD,CAAQQ,MAAOA,QACf,2DAAC,mDAAD,CAASE,WAAa,SAAAC,GAAG,OAAIN,SAAS,GAAD,OAAID,OAAJ,OAAYO,OACjD,2DAAC,qDAAD,CAAWC,eAAiB,kBAAMP,SAAS,KACzCQ,SAAW,WACT,GAAIT,MAAMK,OAAS,EAAG,CACpB,IAAMK,EAAWV,MAAMW,UAAU,EAAGX,MAAMK,OAAS,GACnDJ,SAASS,OAIf,2DAAC,mDAAD,CAASE,UAAY,SAAAC,GAAE,OAAIZ,SAAS,GAAD,OAAID,OAAJ,OAAYa,KAC7CC,aAAe,wBAEbb,SAASc,KAAKf,OAAOgB,mBAOdlB,2B,8BCpCf,uBAiBemB,IAbG,SAAC,GAAD,IAAGT,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,SAAnB,OAChB,0BAASb,UAAU,YAAnB,UACE,cAAC,IAAD,CAAQH,KAAK,mBAAmBC,KAAK,QAAQC,aAAca,IAC3D,cAAC,IAAD,CAAQd,KAAK,SAASC,aAAcc,S,6BCPxC,uBAmBeS,IAfC,SAAC,GAAD,IAAGN,EAAH,EAAGA,UAAWE,EAAd,EAAcA,aAAd,OACd,0BAASlB,UAAU,kBAAnB,UACE,cAAC,IAAD,CAAQF,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAcmB,S,6BCVnC,uBAIMK,EAAgB,SAAAb,GAEpB,MADa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACpBc,KAAI,SAAAC,GAAM,OACpB,cAAC,IAAD,CAAqB3B,KAAM2B,EAAOL,WAAYrB,aAAcW,GAA/Ce,OAcFC,IAVC,SAAC,GAAD,IAAGhB,EAAH,EAAGA,WAAH,OACd,yBAASV,UAAU,UAAnB,SACGuB,EAAcb,O,6BCbnB,gBAEMiB,EAAS,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAH,OACb,qBAAKR,UAAU,SAAf,SACGQ,KAOLmB,EAAOC,aAAe,CACpBpB,MAAO,KAEMmB,O,8BCdf,8CAIAE,IAASC,OACP,cAAC,IAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.00cc4abf.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Button.css'\n\nconst Button = ({ type, text, clickHandler }) => (\n  <button className={type} onClick={() => clickHandler(text)}>\n    <span>{text}</span>\n  </button>\n)\n\nButton.propTypes = {\n  type: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  clickHandler: PropTypes.func.isRequired\n}\n\nexport default Button","import React, { useState } from 'react'\nimport words from 'lodash.words'\nimport Functions from './components/Functions'\nimport MathOps from './components/MathOps'\nimport Numbers from './components/Numbers'\nimport Result from './components/Result'\nimport './App.css'\n\nconst App = () => {\n\n  const [stack, setStack] = useState(\"\")\n  const items = words(stack, /[^+^-^*^/]+/g)\n  const value = items.length > 0 ? items[items.length-1] : \"0\"\n\n  return (\n  <main className='react-calculator'>\n    <Result value={value} />\n    <Numbers onClickNum={ num => setStack(`${stack}${num}`) } />\n    <Functions onContentClear={ () => setStack('') }\n      onDelete={ () => {\n        if (stack.length > 0) {\n          const newStack = stack.substring(0, stack.length - 1)\n          setStack(newStack)\n        }\n      }}\n    />\n    <MathOps onClickOp={ op => setStack(`${stack}${op}`) }\n      onClickEqual={ () => {\n        // eslint-disable-next-line\n        setStack(eval(stack).toString())\n        // setStack(eval(stack).replace(/[-\\d/*+]/g, '').toString())\n      }}\n    />\n  </main>)\n}\n\nexport default App","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Functions = ({ onContentClear, onDelete }) => (\n  <section className=\"functions\">\n    <Button type=\"button-long-text\" text=\"clear\" clickHandler={onContentClear} />\n    <Button text=\"&larr;\" clickHandler={onDelete} />\n  </section>\n)\n\nFunctions.propTypes = {\n  onContentClear: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n\n}\n\nexport default Functions","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst MathOps = ({ onClickOp, onClickEqual }) => (\n  <section className=\"math-operations\">\n    <Button text=\"+\" clickHandler={onClickOp} />\n    <Button text=\"-\" clickHandler={onClickOp} />\n    <Button text=\"*\" clickHandler={onClickOp} />\n    <Button text=\"/\" clickHandler={onClickOp} />\n    <Button text=\"=\" clickHandler={onClickEqual} />\n  </section>\n)\n\nMathOps.propTypes = {\n  onClickOp: PropTypes.func.isRequired,\n  onClickEqual: PropTypes.func.isRequired\n}\n\nexport default MathOps","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst renderButtons = onClickNum => {\n  const nums = [7,8,9,4,5,6,1,2,3,0]\n  return nums.map(number => (\n    <Button key={number} text={number.toString()} clickHandler={onClickNum} />\n  ))\n}\n\nconst Numbers = ({ onClickNum }) => (\n  <section className=\"numbers\">\n    {renderButtons(onClickNum)}\n  </section>\n)\n\nNumbers.propTypes = {\n  onClickNum: PropTypes.func.isRequired\n}\n\nexport default Numbers","import React from 'react'\nimport PropTypes from 'prop-types'\nconst Result = ({ value }) => (\n  <div className=\"result\">\n    {value}\n  </div>\n)\n\nResult.propTypes = {\n  value: PropTypes.string.isRequired\n}\nResult.defaultProps = {\n  value: \"0\"\n}\nexport default Result","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}